services:
  db:
    image: postgres:16
    restart: unless-stopped
    container_name: helpcenter-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${DB_VOLUME:-db_data}:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    container_name: helpcenter-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
    container_name: helpcenter-backend
    restart: unless-stopped
    environment:
      DOCKER_ENV: "1"
      ENVIRONMENT: ${ENVIRONMENT}
      DATABASE_URL_ASYNC: ${DATABASE_URL_ASYNC}
      REDIS_URL: ${REDIS_URL}
      SECRET_KEY: ${SECRET_KEY}
      DEV_EDITOR_KEY: ${DEV_EDITOR_KEY}
      GCS_BUCKET_NAME: ${GCS_BUCKET_NAME}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    command: >
      sh -c "
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

volumes:
  db_data: